package com.bdcor.pip.web.fee.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PipActualRegExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PIP_FEE_ACTUAL_REG
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PIP_FEE_ACTUAL_REG
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PIP_FEE_ACTUAL_REG
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PIP_FEE_ACTUAL_REG
     *
     * @mbggenerated
     */
    public PipActualRegExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PIP_FEE_ACTUAL_REG
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PIP_FEE_ACTUAL_REG
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PIP_FEE_ACTUAL_REG
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PIP_FEE_ACTUAL_REG
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PIP_FEE_ACTUAL_REG
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PIP_FEE_ACTUAL_REG
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PIP_FEE_ACTUAL_REG
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PIP_FEE_ACTUAL_REG
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PIP_FEE_ACTUAL_REG
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PIP_FEE_ACTUAL_REG
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PIP_FEE_ACTUAL_REG
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andProjectidIsNull() {
            addCriterion("PROJECTID is null");
            return (Criteria) this;
        }

        public Criteria andProjectidIsNotNull() {
            addCriterion("PROJECTID is not null");
            return (Criteria) this;
        }

        public Criteria andProjectidEqualTo(String value) {
            addCriterion("PROJECTID =", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidNotEqualTo(String value) {
            addCriterion("PROJECTID <>", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidGreaterThan(String value) {
            addCriterion("PROJECTID >", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidGreaterThanOrEqualTo(String value) {
            addCriterion("PROJECTID >=", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidLessThan(String value) {
            addCriterion("PROJECTID <", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidLessThanOrEqualTo(String value) {
            addCriterion("PROJECTID <=", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidLike(String value) {
            addCriterion("PROJECTID like", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidNotLike(String value) {
            addCriterion("PROJECTID not like", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidIn(List<String> values) {
            addCriterion("PROJECTID in", values, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidNotIn(List<String> values) {
            addCriterion("PROJECTID not in", values, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidBetween(String value1, String value2) {
            addCriterion("PROJECTID between", value1, value2, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidNotBetween(String value1, String value2) {
            addCriterion("PROJECTID not between", value1, value2, "projectid");
            return (Criteria) this;
        }

        public Criteria andLccidIsNull() {
            addCriterion("LCCID is null");
            return (Criteria) this;
        }

        public Criteria andLccidIsNotNull() {
            addCriterion("LCCID is not null");
            return (Criteria) this;
        }

        public Criteria andLccidEqualTo(String value) {
            addCriterion("LCCID =", value, "lccid");
            return (Criteria) this;
        }

        public Criteria andLccidNotEqualTo(String value) {
            addCriterion("LCCID <>", value, "lccid");
            return (Criteria) this;
        }

        public Criteria andLccidGreaterThan(String value) {
            addCriterion("LCCID >", value, "lccid");
            return (Criteria) this;
        }

        public Criteria andLccidGreaterThanOrEqualTo(String value) {
            addCriterion("LCCID >=", value, "lccid");
            return (Criteria) this;
        }

        public Criteria andLccidLessThan(String value) {
            addCriterion("LCCID <", value, "lccid");
            return (Criteria) this;
        }

        public Criteria andLccidLessThanOrEqualTo(String value) {
            addCriterion("LCCID <=", value, "lccid");
            return (Criteria) this;
        }

        public Criteria andLccidLike(String value) {
            addCriterion("LCCID like", value, "lccid");
            return (Criteria) this;
        }

        public Criteria andLccidNotLike(String value) {
            addCriterion("LCCID not like", value, "lccid");
            return (Criteria) this;
        }

        public Criteria andLccidIn(List<String> values) {
            addCriterion("LCCID in", values, "lccid");
            return (Criteria) this;
        }

        public Criteria andLccidNotIn(List<String> values) {
            addCriterion("LCCID not in", values, "lccid");
            return (Criteria) this;
        }

        public Criteria andLccidBetween(String value1, String value2) {
            addCriterion("LCCID between", value1, value2, "lccid");
            return (Criteria) this;
        }

        public Criteria andLccidNotBetween(String value1, String value2) {
            addCriterion("LCCID not between", value1, value2, "lccid");
            return (Criteria) this;
        }

        public Criteria andActualCostIsNull() {
            addCriterion("ACTUAL_COST is null");
            return (Criteria) this;
        }

        public Criteria andActualCostIsNotNull() {
            addCriterion("ACTUAL_COST is not null");
            return (Criteria) this;
        }

        public Criteria andActualCostEqualTo(Short value) {
            addCriterion("ACTUAL_COST =", value, "actualCost");
            return (Criteria) this;
        }

        public Criteria andActualCostNotEqualTo(Short value) {
            addCriterion("ACTUAL_COST <>", value, "actualCost");
            return (Criteria) this;
        }

        public Criteria andActualCostGreaterThan(Short value) {
            addCriterion("ACTUAL_COST >", value, "actualCost");
            return (Criteria) this;
        }

        public Criteria andActualCostGreaterThanOrEqualTo(Short value) {
            addCriterion("ACTUAL_COST >=", value, "actualCost");
            return (Criteria) this;
        }

        public Criteria andActualCostLessThan(Short value) {
            addCriterion("ACTUAL_COST <", value, "actualCost");
            return (Criteria) this;
        }

        public Criteria andActualCostLessThanOrEqualTo(Short value) {
            addCriterion("ACTUAL_COST <=", value, "actualCost");
            return (Criteria) this;
        }

        public Criteria andActualCostIn(List<Short> values) {
            addCriterion("ACTUAL_COST in", values, "actualCost");
            return (Criteria) this;
        }

        public Criteria andActualCostNotIn(List<Short> values) {
            addCriterion("ACTUAL_COST not in", values, "actualCost");
            return (Criteria) this;
        }

        public Criteria andActualCostBetween(Short value1, Short value2) {
            addCriterion("ACTUAL_COST between", value1, value2, "actualCost");
            return (Criteria) this;
        }

        public Criteria andActualCostNotBetween(Short value1, Short value2) {
            addCriterion("ACTUAL_COST not between", value1, value2, "actualCost");
            return (Criteria) this;
        }

        public Criteria andCostDateIsNull() {
            addCriterion("COST_DATE is null");
            return (Criteria) this;
        }

        public Criteria andCostDateIsNotNull() {
            addCriterion("COST_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andCostDateEqualTo(Date value) {
            addCriterion("COST_DATE =", value, "costDate");
            return (Criteria) this;
        }

        public Criteria andCostDateNotEqualTo(Date value) {
            addCriterion("COST_DATE <>", value, "costDate");
            return (Criteria) this;
        }

        public Criteria andCostDateGreaterThan(Date value) {
            addCriterion("COST_DATE >", value, "costDate");
            return (Criteria) this;
        }

        public Criteria andCostDateGreaterThanOrEqualTo(Date value) {
            addCriterion("COST_DATE >=", value, "costDate");
            return (Criteria) this;
        }

        public Criteria andCostDateLessThan(Date value) {
            addCriterion("COST_DATE <", value, "costDate");
            return (Criteria) this;
        }

        public Criteria andCostDateLessThanOrEqualTo(Date value) {
            addCriterion("COST_DATE <=", value, "costDate");
            return (Criteria) this;
        }

        public Criteria andCostDateIn(List<Date> values) {
            addCriterion("COST_DATE in", values, "costDate");
            return (Criteria) this;
        }

        public Criteria andCostDateNotIn(List<Date> values) {
            addCriterion("COST_DATE not in", values, "costDate");
            return (Criteria) this;
        }

        public Criteria andCostDateBetween(Date value1, Date value2) {
            addCriterion("COST_DATE between", value1, value2, "costDate");
            return (Criteria) this;
        }

        public Criteria andCostDateNotBetween(Date value1, Date value2) {
            addCriterion("COST_DATE not between", value1, value2, "costDate");
            return (Criteria) this;
        }

        public Criteria andSubmitterIsNull() {
            addCriterion("SUBMITTER is null");
            return (Criteria) this;
        }

        public Criteria andSubmitterIsNotNull() {
            addCriterion("SUBMITTER is not null");
            return (Criteria) this;
        }

        public Criteria andSubmitterEqualTo(String value) {
            addCriterion("SUBMITTER =", value, "submitter");
            return (Criteria) this;
        }

        public Criteria andSubmitterNotEqualTo(String value) {
            addCriterion("SUBMITTER <>", value, "submitter");
            return (Criteria) this;
        }

        public Criteria andSubmitterGreaterThan(String value) {
            addCriterion("SUBMITTER >", value, "submitter");
            return (Criteria) this;
        }

        public Criteria andSubmitterGreaterThanOrEqualTo(String value) {
            addCriterion("SUBMITTER >=", value, "submitter");
            return (Criteria) this;
        }

        public Criteria andSubmitterLessThan(String value) {
            addCriterion("SUBMITTER <", value, "submitter");
            return (Criteria) this;
        }

        public Criteria andSubmitterLessThanOrEqualTo(String value) {
            addCriterion("SUBMITTER <=", value, "submitter");
            return (Criteria) this;
        }

        public Criteria andSubmitterLike(String value) {
            addCriterion("SUBMITTER like", value, "submitter");
            return (Criteria) this;
        }

        public Criteria andSubmitterNotLike(String value) {
            addCriterion("SUBMITTER not like", value, "submitter");
            return (Criteria) this;
        }

        public Criteria andSubmitterIn(List<String> values) {
            addCriterion("SUBMITTER in", values, "submitter");
            return (Criteria) this;
        }

        public Criteria andSubmitterNotIn(List<String> values) {
            addCriterion("SUBMITTER not in", values, "submitter");
            return (Criteria) this;
        }

        public Criteria andSubmitterBetween(String value1, String value2) {
            addCriterion("SUBMITTER between", value1, value2, "submitter");
            return (Criteria) this;
        }

        public Criteria andSubmitterNotBetween(String value1, String value2) {
            addCriterion("SUBMITTER not between", value1, value2, "submitter");
            return (Criteria) this;
        }

        public Criteria andInputimeIsNull() {
            addCriterion("INPUTIME is null");
            return (Criteria) this;
        }

        public Criteria andInputimeIsNotNull() {
            addCriterion("INPUTIME is not null");
            return (Criteria) this;
        }

        public Criteria andInputimeEqualTo(Date value) {
            addCriterion("INPUTIME =", value, "inputime");
            return (Criteria) this;
        }

        public Criteria andInputimeNotEqualTo(Date value) {
            addCriterion("INPUTIME <>", value, "inputime");
            return (Criteria) this;
        }

        public Criteria andInputimeGreaterThan(Date value) {
            addCriterion("INPUTIME >", value, "inputime");
            return (Criteria) this;
        }

        public Criteria andInputimeGreaterThanOrEqualTo(Date value) {
            addCriterion("INPUTIME >=", value, "inputime");
            return (Criteria) this;
        }

        public Criteria andInputimeLessThan(Date value) {
            addCriterion("INPUTIME <", value, "inputime");
            return (Criteria) this;
        }

        public Criteria andInputimeLessThanOrEqualTo(Date value) {
            addCriterion("INPUTIME <=", value, "inputime");
            return (Criteria) this;
        }

        public Criteria andInputimeIn(List<Date> values) {
            addCriterion("INPUTIME in", values, "inputime");
            return (Criteria) this;
        }

        public Criteria andInputimeNotIn(List<Date> values) {
            addCriterion("INPUTIME not in", values, "inputime");
            return (Criteria) this;
        }

        public Criteria andInputimeBetween(Date value1, Date value2) {
            addCriterion("INPUTIME between", value1, value2, "inputime");
            return (Criteria) this;
        }

        public Criteria andInputimeNotBetween(Date value1, Date value2) {
            addCriterion("INPUTIME not between", value1, value2, "inputime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PIP_FEE_ACTUAL_REG
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PIP_FEE_ACTUAL_REG
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}