package com.bdcor.pip.web.data.dao;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.bdcor.pip.core.persistence.MyBatisRepository;
import com.bdcor.pip.web.data.domain.PipCommPatient;
import com.bdcor.pip.web.data.domain.PipCommPatientExample;
import com.bdcor.pip.web.data.domain.PipCommPatientKey;
import com.bdcor.pip.web.data.filter.PatientFilter;
import com.bdcor.pip.web.msg.domain.PatientGroupVo;
import com.bdcor.pip.web.progress.filter.ProgressFilter;

@MyBatisRepository
public interface PipCommPatientMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table PIP_COMM_PATIENT
	 * 
	 * @mbggenerated
	 */
	int countByExample(PipCommPatientExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table PIP_COMM_PATIENT
	 * 
	 * @mbggenerated
	 */
	int deleteByExample(PipCommPatientExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table PIP_COMM_PATIENT
	 * 
	 * @mbggenerated
	 */
	int deleteByPrimaryKey(PipCommPatientKey key);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table PIP_COMM_PATIENT
	 * 
	 * @mbggenerated
	 */
	int insert(PipCommPatient record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table PIP_COMM_PATIENT
	 * 
	 * @mbggenerated
	 */
	int insertSelective(PipCommPatient record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table PIP_COMM_PATIENT
	 * 
	 * @mbggenerated
	 */
	List<PipCommPatient> selectByExample(PipCommPatientExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table PIP_COMM_PATIENT
	 * 
	 * @mbggenerated
	 */
	PipCommPatient selectByPrimaryKey(PipCommPatientKey key);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table PIP_COMM_PATIENT
	 * 
	 * @mbggenerated
	 */
	int updateByExampleSelective(@Param("record") PipCommPatient record,
			@Param("example") PipCommPatientExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table PIP_COMM_PATIENT
	 * 
	 * @mbggenerated
	 */
	int updateByExample(@Param("record") PipCommPatient record,
			@Param("example") PipCommPatientExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table PIP_COMM_PATIENT
	 * 
	 * @mbggenerated
	 */
	int updateByPrimaryKeySelective(PipCommPatient record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table PIP_COMM_PATIENT
	 * 
	 * @mbggenerated
	 */
	int updateByPrimaryKey(PipCommPatient record);

	int updateByPatientId(PipCommPatient record);

	public List getLccRiskNum(@Param("projectId") String projectId);

	public List getLccViewNum(@Param("projectId") String projectId);

	public List getAreaRiskNum(@Param("projectId") String projectId);

	public List getAreaRiskOrderNum(@Param("projectId") String projectId);

	public List getAreaFollowViewNum(@Param("projectId") String projectId);

	public List getLccRiskNumByTime(PatientFilter filter);

	public List getLccViewNumByTime(PatientFilter filter);

	public List<PipCommPatient> getLccPatientList(PatientFilter filter);

	public Map getProgressByCondit(ProgressFilter filter);

	public List<PipCommPatient> queryPatientList(PatientFilter pf);

	public void updateByPatientList(PatientFilter pf);

	List<PipCommPatient> selectPatientNeedSendMsg();

	void updateMsgPatient(PipCommPatient updatePat);

	void updatePatientInfo(Map<String, Object> pInfoMap);

	void updatePatientDate(Map<String, Object> pInfoMap);

	PatientGroupVo getPatientGroupVo(@Param("patientId")String patientID);

	List<Map<String,Object>> getPatientForAuto(//@Param("patientId")String patientId,
	@Param("q") String q , @Param("limit") String limit
	);

	int updateProcessType(@Param("patientId")String patientId,@Param("value")String processType);

	Map<String,Object> getInfoByid(String patientId);

	/**
	 * 更新发送状态
	 * 如果患者超过7个月随访时间窗，仍然没有来做末次随访，那么我们也停止短信的发送
	 */
	int updateSendTypeByUQS14();

	/**
	 * 更新发送状态
	 * 如患者的随访时间窗为150-210天，则该患者自完成基线问卷的第211天起就不再接收研究短信。
	 */
	int updateSendTypeByUQS11();
}