<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bdcor.pip.web.data.dao.PipCommPatientMapper">
  <resultMap id="BaseResultMap" type="com.bdcor.pip.web.data.domain.PipCommPatient">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="PATIENT_ID" jdbcType="VARCHAR" property="patientId" />
    <id column="PROJECT_ID" jdbcType="VARCHAR" property="projectId" />
    <result column="PATIENT_NAME" jdbcType="VARCHAR" property="patientName" />
    <result column="COMM_PERSON_CODE" jdbcType="VARCHAR" property="commPersonCode" />
    <result column="CREATE_BY" jdbcType="VARCHAR" property="createBy" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="UPDATE_BY" jdbcType="VARCHAR" property="updateBy" />
    <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="IS_REMOVED" jdbcType="DECIMAL" property="isRemoved" />
    <result column="SEX" jdbcType="VARCHAR" property="sex" />
    <result column="NATION" jdbcType="VARCHAR" property="nation" />
    <result column="BIRTHDAY" jdbcType="TIMESTAMP" property="birthday" />
    <result column="NATIONALITY" jdbcType="VARCHAR" property="nationality" />
    <result column="ID_NUMBER" jdbcType="VARCHAR" property="idNumber" />
    <result column="RISK_CODE" jdbcType="VARCHAR" property="riskCode" />
    <result column="CREDENTIALS_TYPE" jdbcType="VARCHAR" property="credentialsType" />
    <result column="CREDENTIALS_CODE" jdbcType="VARCHAR" property="credentialsCode" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="MOBILE" jdbcType="VARCHAR" property="mobile" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="MARITAL_STATUS" jdbcType="VARCHAR" property="maritalStatus" />
    <result column="EDUCATIONAL" jdbcType="VARCHAR" property="educational" />
    <result column="POST_CODE" jdbcType="VARCHAR" property="postCode" />
    <result column="NATIVE_PROVENCE_CODE" jdbcType="VARCHAR" property="nativeProvenceCode" />
    <result column="NATIVE_CITY_CODE" jdbcType="VARCHAR" property="nativeCityCode" />
    <result column="NATIVE_COUNTY_CODE" jdbcType="VARCHAR" property="nativeCountyCode" />
    <result column="NATIVE_TOWN_CODE" jdbcType="VARCHAR" property="nativeTownCode" />
    <result column="NATIVE_VILLAGE_CODE" jdbcType="VARCHAR" property="nativeVillageCode" />
    <result column="NOW_PROVENCE_CODE" jdbcType="VARCHAR" property="nowProvenceCode" />
    <result column="NOW_CITY_CODE" jdbcType="VARCHAR" property="nowCityCode" />
    <result column="NOW_COUNTY_CODE" jdbcType="VARCHAR" property="nowCountyCode" />
    <result column="NOW_TOWN_CODE" jdbcType="VARCHAR" property="nowTownCode" />
    <result column="NOW_VILLAGE_CODE" jdbcType="VARCHAR" property="nowVillageCode" />
    <result column="LCC_CODE" jdbcType="VARCHAR" property="lccCode" />
    <result column="LCC_NAME" jdbcType="VARCHAR" property="lccName" />
    <result column="PATIENT_CODE" jdbcType="VARCHAR" property="patientCode" />
    <result column="BLOOD_CODE" jdbcType="VARCHAR" property="bloodCode" />
    <result column="IS_RISK" jdbcType="VARCHAR" property="isRisk" />
    <result column="RISK_DATE" jdbcType="TIMESTAMP" property="riskDate" />
    <result column="IS_FOLLOWVIEW" jdbcType="VARCHAR" property="isFollowview" />
    <result column="FOLLOWVIEW_DATE" jdbcType="TIMESTAMP" property="followviewDate" />
    <result column="IS_FOLLOWRISK" jdbcType="VARCHAR" property="isFollowrisk" />
    <result column="FOLLOWRISK_DATE" jdbcType="TIMESTAMP" property="followriskDate" />
    <result column="IS_SPECIAL" property="isSpecial" jdbcType="DECIMAL" />
    <result column="LINK_MAN1" jdbcType="VARCHAR" property="linkMan1" />
    <result column="LINK_MAN1_RELATION" jdbcType="VARCHAR" property="linkMan1Relation" />
    <result column="LINK_MAN1_MOBILE" jdbcType="VARCHAR" property="linkMan1Mobile" />
    <result column="LINK_MAN2" jdbcType="VARCHAR" property="linkMan2" />
    <result column="LINK_MAN2_RELATION" jdbcType="VARCHAR" property="linkMan2Relation" />
    <result column="LINK_MAN2_MOBILE" jdbcType="VARCHAR" property="linkMan2Mobile" />
    <result column="CASE_CODE" jdbcType="VARCHAR" property="caseCode" />
    <result column="LINK_MAN1_PHONE" jdbcType="VARCHAR" property="linkMan1Phone" />
    <result column="LINK_MAN2_PHONE" jdbcType="VARCHAR" property="linkMan2Phone" />
    <result column="LAST_FOLLOWVIEW_DATE" jdbcType="VARCHAR" property="lastFollowviewDate" />
    <result column="BELONG_GROUP" jdbcType="VARCHAR" property="belongGroup" javaType="java.lang.String"/>
 	<result column="GROUP_DATE" jdbcType="TIMESTAMP" property="groupDate" />
 	<result column="IS_SMOKING" jdbcType="VARCHAR" property="isSmoking" />
 	<result column="IS_SUBSCRIBE" jdbcType="VARCHAR" property="isSubscribe" />
  	<result column="IS_HYPERTENSION" jdbcType="VARCHAR" property="isHypertension" />
  	<result column="IS_JOIN_MSG" jdbcType="VARCHAR" property="isJoinMsg" />
  	<result column="IS_SYSTEM_DIABETES" jdbcType="VARCHAR" property="isSystemDiabetes" />
  	<result column="IS_DIABETES" jdbcType="DECIMAL" property="isDiabetes" />
  	<result column="STATE_010" jdbcType="DECIMAL" property="state010" />
  	<result column="STATE_011" jdbcType="DECIMAL" property="state011" />
  	<result column="STATE_012" jdbcType="DECIMAL" property="state012" />
  	<result column="STATE_002002" jdbcType="DECIMAL" property="state002002" />
      <result column="STATE_014" jdbcType="DECIMAL" property="state014" />
      <result column="STATE_015" jdbcType="DECIMAL" property="state015" />
      <result column="BETWEEN_DAYS" jdbcType="DECIMAL" property="betweenDays" />

  	<result column="IS_XJGSBS" jdbcType="VARCHAR" property="isXjgsbs" />
    <result column="IS_6STATE" jdbcType="INTEGER"  javaType="java.lang.Integer" property="is6State" />
    <result column="IS_DEAD" jdbcType="INTEGER"  javaType="java.lang.Integer" property="isDead" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    PATIENT_ID, PROJECT_ID, PATIENT_NAME, COMM_PERSON_CODE, CREATE_BY, CREATE_DATE, UPDATE_BY, 
    UPDATE_DATE, IS_REMOVED, SEX, NATION, BIRTHDAY, NATIONALITY, ID_NUMBER, CREDENTIALS_TYPE, 
    CREDENTIALS_CODE, PHONE, MOBILE, EMAIL, MARITAL_STATUS, EDUCATIONAL, POST_CODE, NATIVE_PROVENCE_CODE, 
    NATIVE_CITY_CODE, NATIVE_COUNTY_CODE, NATIVE_TOWN_CODE, NATIVE_VILLAGE_CODE, NOW_PROVENCE_CODE, 
    NOW_CITY_CODE, NOW_COUNTY_CODE, NOW_TOWN_CODE, NOW_VILLAGE_CODE, LCC_CODE, PATIENT_CODE, 
    BLOOD_CODE, IS_RISK, RISK_DATE, IS_FOLLOWVIEW, FOLLOWVIEW_DATE, IS_FOLLOWRISK, FOLLOWRISK_DATE, 
    RISK_CODE, IS_SPECIAL,IS_XJGSBS
  </sql>
  <select id="selectByExample" parameterType="com.bdcor.pip.web.data.domain.PipCommPatientExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PIP_COMM_PATIENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.bdcor.pip.web.data.domain.PipCommPatientKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from PIP_COMM_PATIENT
    where PATIENT_ID = #{patientId,jdbcType=VARCHAR}
      and PROJECT_ID = #{projectId,jdbcType=VARCHAR}
  </select>
  
  <select id="queryPatientList" parameterType="com.bdcor.pip.web.data.filter.PatientFilter" resultMap="BaseResultMap">
   select 
    a.PATIENT_ID, a.PROJECT_ID, a.PATIENT_NAME, a.COMM_PERSON_CODE, a.CREATE_BY, b.lcc_name, a.CREATE_DATE, a.UPDATE_BY, 
    a.UPDATE_DATE, a.IS_REMOVED, a.SEX, a.NATION, a.BIRTHDAY, a.NATIONALITY, a.ID_NUMBER, a.CREDENTIALS_TYPE, 
    a.CREDENTIALS_CODE, a.PHONE, a.MOBILE, a.EMAIL, a.MARITAL_STATUS, a.EDUCATIONAL, a.POST_CODE, a.NATIVE_PROVENCE_CODE, 
    a.NATIVE_CITY_CODE, a.NATIVE_COUNTY_CODE, a.NATIVE_TOWN_CODE, a.NATIVE_VILLAGE_CODE, a.NOW_PROVENCE_CODE, 
    a.NOW_CITY_CODE, a.NOW_COUNTY_CODE, a.NOW_TOWN_CODE, a.NOW_VILLAGE_CODE, a.LCC_CODE, a.PATIENT_CODE, 
    a.BLOOD_CODE, a.IS_RISK, RISK_DATE, a.IS_FOLLOWVIEW, a.FOLLOWVIEW_DATE, a.IS_FOLLOWRISK, a.FOLLOWRISK_DATE, 
    a.RISK_CODE, a.IS_SPECIAL,
    a.LINK_MAN1,
    a.LINK_MAN1_RELATION,a.LINK_MAN1_MOBILE,a.LINK_MAN2,a.LINK_MAN2_RELATION,a.LINK_MAN2_MOBILE,
    a.CASE_CODE,a.LINK_MAN1_PHONE,a.LINK_MAN2_PHONE,a.LAST_FOLLOWVIEW_DATE,
    a.BELONG_GROUP,a.GROUP_DATE,a.IS_SMOKING,a.IS_SUBSCRIBE,a.IS_HYPERTENSION,a.IS_JOIN_MSG,a.IS_DIABETES,a.IS_SYSTEM_DIABETES,
    uqsState.STATE_010,uqsState.STATE_011,uqsState.STATE_012,uqsState.STATE_002002,STATE_014,STATE_015
    ,a.is_6state , a.IS_DEAD,
      round( sysdate - nvl(a.group_date,pd.six_real_date) ) between_days
      from PIP_COMM_PATIENT a
 	left join  Pip_Comm_Lcc b on a.lcc_code = b.lcc_code and b.project_id= a.project_id
  	left join PIP_COMM_PATIENT_DATE pd on a.PATIENT_ID = pd.PATIENT_ID and pd.project_id = a.project_id
  	left join(select
				PROJECT_ID,PATIENT_ID,
				max(case when substr(UQS_VERSION,5,3)='010' then STATE else null end)as STATE_010,
				max(case when substr(UQS_VERSION,5,3)='011' then STATE else null end)as STATE_011,
				max(case when substr(UQS_VERSION,5,3)='012' then STATE else null end)as STATE_012,
      max(case when substr(UQS_VERSION,5,3)='014' then STATE else null end)as STATE_014,
      max(case when substr(UQS_VERSION,5,3)='015' then STATE else null end)as STATE_015,
      max(case when substr(UQS_VERSION,5,7)='002.002' then STATE else null end)as STATE_002002
				from(SELECT  PROJECT_ID,PATIENT_ID,UQS_VERSION,STATE,Row_Number() OVER (partition by PROJECT_ID,PATIENT_ID,substr(UQS_VERSION,5,3) ORDER BY STATE,CREATE_DATE desc) rank FROM PIP_UQS_ANSWERQN_LOG
				where STATE&lt;=2)where rank=1
				group by PROJECT_ID,PATIENT_ID)uqsState on uqsState.PROJECT_ID=a.PROJECT_ID and uqsState.PATIENT_ID=a.PATIENT_ID
  	where  a.PROJECT_ID =#{projectId,jdbcType=VARCHAR}
    <if test="processtypes != null and processtypes != '' ">
      and a.process_types = #{processtypes}
    </if>

      <if test="isNewAdd != null and isNewAdd != ''  " >
          <if test=' isNewAdd == "1" '>
              and substr(a.patient_id,4,2) = '99'
          </if>
          <if test='isNewAdd == "2" '>
              and substr(a.patient_id,4,2) != '99'
          </if>
      </if>

  	<if test="isJoinMsg !=null and isJoinMsg == 1 ">
  	and a.IS_JOIN_MSG=#{isJoinMsg}
  	</if>
    <if test="isRemoved != null and isRemoved == '0' ">
       and a.is_removed = #{isRemoved}
    </if>
    <if test="idlength != null and idlength != '' ">
       and length(a.patient_id) = #{idlength}
    </if>

  <if test="isJoinMsg !=null and isJoinMsg == 2 ">
      and ( a.IS_JOIN_MSG !='1' or  a.IS_JOIN_MSG is null)
  </if>
  	<if test="userId !=null and userId !=''">
  	 and a.lcc_code in 
  	 ( select lcc_code from pip_sys_user_data_limit lt where lt.user_id =#{userId} )
    </if>
    <if test="firstStartDate !=null and firstStartDate !=''">
    	and pd.FIRST_PLAN_DATE >= #{firstStartDate}
    </if>
    <if test="firstEndDate !=null and firstEndDate !=''">
    	and pd.FIRST_PLAN_DATE <![CDATA[<=]]>  #{firstEndDate}
    </if>
    <if test="sixStartDate !=null and sixStartDate !=''">
    	and pd.SIX_PLAN_DATE >=  #{sixStartDate}
    </if>
    <if test="sixEndDate !=null and sixEndDate !=''">
    	and pd.SIX_PLAN_DATE <![CDATA[<=]]>  #{sixEndDate}
    </if>
    <if test="lccCode!=null  and lccCode!=''">
    	and a.lcc_code = #{lccCode}
    </if>
    <if test="patientId!=null  and patientId!=''">
    	and a.PATIENT_ID = #{patientId} <!-- like '%'||#{patientId}||'%' -->
    </if>
    <if test="patientName!=null  and patientName!=''">
    	and a.PATIENT_NAME like '%'||#{patientName}||'%'
    </if>
    <if test="idNumber!=null  and idNumber!=''">
    	and a.ID_NUMBER like '%'||#{idNumber}||'%'
    </if>
    <if test="belongGroup!=null  and belongGroup!=''">
    	and a.BELONG_GROUP = #{belongGroup}
    </if>
    <if test="isdiabetes!=null  and isdiabetes!=''">
    	and a.IS_DIABETES = #{isdiabetes}
    </if>
    <if test="noQn!=null  and noQn!=''">
    	and not exists(select 1 from PIP_UQS_ANSWERQN_LOG l where l.PATIENT_ID=a.PATIENT_ID and l.PROJECT_ID=a.PROJECT_ID and l.STATE=1 and substr(l.UQS_VERSION,5,3) in (${noQn}))
    </if>
    <if test="completeQn!=null  and completeQn!=''">
    	and exists(select 1 from PIP_UQS_ANSWERQN_LOG l where l.PATIENT_ID=a.PATIENT_ID and l.PROJECT_ID=a.PROJECT_ID and l.STATE=1 and substr(l.UQS_VERSION,5,3) in (${completeQn}))
    </if>
    <if test="isSystemDiabetes != null and isSystemDiabetes==1">
    	and a.IS_SYSTEM_DIABETES = 1
    </if>
    <if test="isSystemDiabetes != null and isSystemDiabetes==2">
        and ( (a.IS_SYSTEM_DIABETES is null AND STATE_012 is not null ) or  a.IS_SYSTEM_DIABETES = 2)
    </if>
    <if test="isDead != null and isDead==2">
    	and (a.IS_DEAD is null or a.IS_DEAD = 2)
    </if>
    <choose>
        <when test='suifang != null and suifang == "010" '>
            <choose>
                <when test='suifangtype != null and suifangtype == "0" '>
                    AND STATE_010 is null AND ( a.IS_DEAD != '1' or a.IS_DEAD is null )
                </when>
                <when test='suifangtype != null and suifangtype == "1" '>
                    AND STATE_010  = '1'  --AND ( a.IS_DEAD != '1' or a.IS_DEAD is null )
                </when>
                <when test='suifangtype != null and suifangtype == "2" '>
                    AND STATE_010  = '2'  AND ( a.IS_DEAD != '1' or a.IS_DEAD is null )
                </when>
                <when test='suifangtype != null and suifangtype == "3" '>
                    AND a.IS_DEAD = '1'
                    and not exists( select 1 from pip_uqs_answerqn_log ql where a.patient_id = ql.patient_id and ql.state=1 and ql.uqs_version = '004.010.001' )
                </when>
            </choose>
        </when>
        <when test='suifang != null and suifang == "011" '>
            <choose>
                <when test='suifangtype != null and suifangtype == "0" '>
                    AND STATE_011 is null AND ( a.IS_DEAD != '1' or a.IS_DEAD is null )
                    and STATE_010 = '1'
                </when>
                <when test='suifangtype != null and suifangtype == "1" '>
                    AND STATE_011  = '1'  --AND ( a.IS_DEAD != '1' or a.IS_DEAD is null )
                </when>
                <when test='suifangtype != null and suifangtype == "2" '>
                    AND STATE_011  = '2'  AND ( a.IS_DEAD != '1' or a.IS_DEAD is null )
                </when>
                <when test='suifangtype != null and suifangtype == "3" '>
                    AND a.IS_DEAD = '1'
                    and not exists( select 1 from pip_uqs_answerqn_log ql where a.patient_id = ql.patient_id and ql.state=1 and ql.uqs_version = '004.011.001' )

                </when>
            </choose>
        </when>
        <when test='suifang != null and suifang == "012" '>
            <choose>
                <when test='suifangtype != null and suifangtype == "0" '>
                    AND STATE_012 is null  AND ( a.IS_DEAD != '1' or a.IS_DEAD is null )
                    and STATE_011 = '1' and ( a.IS_DIABETES is null or a.IS_DIABETES != '1' )
                </when>
                <when test='suifangtype != null and suifangtype == "1" '>
                    AND STATE_012  = '1'  --AND ( a.IS_DEAD != '1' or a.IS_DEAD is null )
                </when>
                <when test='suifangtype != null and suifangtype == "2" '>
                    AND STATE_012  = '2'  AND ( a.IS_DEAD != '1' or a.IS_DEAD is null )
                </when>
                <when test='suifangtype != null and suifangtype == "3" '>
                    AND a.IS_DEAD = '1'
                    and not exists( select 1 from pip_uqs_answerqn_log ql where a.patient_id = ql.patient_id and ql.state=1 and ql.uqs_version = '004.012.001' )

                </when>
            </choose>
        </when>
        <when test='suifang != null and suifang == "002002" '>
            <choose>
                <when test='suifangtype != null and suifangtype == "0" '>
                    AND STATE_002002 is null  AND ( a.IS_DEAD != '1' or a.IS_DEAD is null )
                </when>
                <when test='suifangtype != null and suifangtype == "1" '>
                    AND STATE_002002  = '1'  --AND ( a.IS_DEAD != '1' or a.IS_DEAD is null )
                </when>
                <when test='suifangtype != null and suifangtype == "2" '>
                    AND STATE_002002  = '2'  AND ( a.IS_DEAD != '1' or a.IS_DEAD is null )
                </when>
                <when test='suifangtype != null and suifangtype == "3" '>
                    AND a.IS_DEAD = '1'
                    and not exists( select 1 from pip_uqs_answerqn_log ql where a.patient_id = ql.patient_id and ql.state=1 and ql.uqs_version = '004.002.002' )

                </when>
            </choose>
        </when>
        <when test='suifang != null and suifang == "015" '>
            <choose>
                <when test='suifangtype != null and suifangtype == "0" '>
                    AND STATE_015 is null  AND ( a.IS_DEAD != '1' or a.IS_DEAD is null )
                    and STATE_002002 = '1'
                    and round( sysdate - nvl(a.group_date,pd.six_real_date) ) >= 150
                </when>
                <when test='suifangtype != null and suifangtype == "1" '>
                    AND STATE_015  = '1'  --AND ( a.IS_DEAD != '1' or a.IS_DEAD is null )
                </when>
                <when test='suifangtype != null and suifangtype == "2" '>
                    AND STATE_015  = '2'  AND ( a.IS_DEAD != '1' or a.IS_DEAD is null )
                </when>
                <when test='suifangtype != null and suifangtype == "3" '>
                    AND a.IS_DEAD = '1'
                    and not exists( select 1 from pip_uqs_answerqn_log ql where a.patient_id = ql.patient_id and ql.state=1 and ql.uqs_version = '004.015.001' )

                </when>
            </choose>
        </when>
        <when test='suifang != null and suifang == "014" '>
            <choose>
                <when test='suifangtype != null and suifangtype == "0" '>
                    AND STATE_014 is null  AND ( a.IS_DEAD != '1' or a.IS_DEAD is null )
                    and a.belong_group is not null
                    and round( sysdate - nvl(a.group_date,pd.six_real_date) ) >= 150
                </when>
                <when test='suifangtype != null and suifangtype == "1" '>
                    AND STATE_014  = '1'  --AND ( a.IS_DEAD != '1' or a.IS_DEAD is null )
                </when>
                <when test='suifangtype != null and suifangtype == "2" '>
                    AND STATE_014  = '2'  AND ( a.IS_DEAD != '1' or a.IS_DEAD is null )
                </when>
                <when test='suifangtype != null and suifangtype == "3" '>
                    AND a.IS_DEAD = '1'
                    and not exists( select 1 from pip_uqs_answerqn_log ql where a.patient_id = ql.patient_id and ql.state=1 and ql.uqs_version = '004.014.001' )
                </when>
            </choose>
        </when>
    </choose>

    <if test="sidx != null and sidx != ''">
		order by ${sidx} 
		<if test="sord!=null and sord!= ''">
			${sord}
		</if>
	</if>	
  </select>
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="com.bdcor.pip.web.data.domain.PipCommPatientKey">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from PIP_COMM_PATIENT
    where PATIENT_ID = #{patientId,jdbcType=VARCHAR}
      and PROJECT_ID = #{projectId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.bdcor.pip.web.data.domain.PipCommPatientExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from PIP_COMM_PATIENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bdcor.pip.web.data.domain.PipCommPatient">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into PIP_COMM_PATIENT (PATIENT_ID, PROJECT_ID, PATIENT_NAME, 
      COMM_PERSON_CODE, CREATE_BY, CREATE_DATE, 
      UPDATE_BY, UPDATE_DATE, IS_REMOVED, 
      SEX, NATION, BIRTHDAY, 
      NATIONALITY, ID_NUMBER, CREDENTIALS_TYPE, 
      CREDENTIALS_CODE, PHONE, MOBILE, 
      EMAIL, MARITAL_STATUS, EDUCATIONAL, 
      POST_CODE, NATIVE_PROVENCE_CODE, NATIVE_CITY_CODE, 
      NATIVE_COUNTY_CODE, NATIVE_TOWN_CODE, NATIVE_VILLAGE_CODE, 
      NOW_PROVENCE_CODE, NOW_CITY_CODE, NOW_COUNTY_CODE, 
      NOW_TOWN_CODE, NOW_VILLAGE_CODE, LCC_CODE, 
      PATIENT_CODE, BLOOD_CODE, IS_RISK, 
      RISK_DATE, IS_FOLLOWVIEW, FOLLOWVIEW_DATE, 
      IS_FOLLOWRISK, FOLLOWRISK_DATE, RISK_CODE,IS_NUMBER,
      IS_SPECIAL)
    values (#{patientId,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, #{patientName,jdbcType=VARCHAR}, 
      #{commPersonCode,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{isRemoved,jdbcType=DECIMAL}, 
      #{sex,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, 
      #{nationality,jdbcType=VARCHAR}, #{idNumber,jdbcType=VARCHAR}, #{credentialsType,jdbcType=VARCHAR}, 
      #{credentialsCode,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{maritalStatus,jdbcType=VARCHAR}, #{educational,jdbcType=VARCHAR}, 
      #{postCode,jdbcType=VARCHAR}, #{nativeProvenceCode,jdbcType=VARCHAR}, #{nativeCityCode,jdbcType=VARCHAR}, 
      #{nativeCountyCode,jdbcType=VARCHAR}, #{nativeTownCode,jdbcType=VARCHAR}, #{nativeVillageCode,jdbcType=VARCHAR}, 
      #{nowProvenceCode,jdbcType=VARCHAR}, #{nowCityCode,jdbcType=VARCHAR}, #{nowCountyCode,jdbcType=VARCHAR}, 
      #{nowTownCode,jdbcType=VARCHAR}, #{nowVillageCode,jdbcType=VARCHAR}, #{lccCode,jdbcType=VARCHAR}, 
      #{patientCode,jdbcType=VARCHAR}, #{bloodCode,jdbcType=VARCHAR}, #{isRisk,jdbcType=VARCHAR}, 
      #{riskDate,jdbcType=TIMESTAMP}, #{isFollowview,jdbcType=VARCHAR}, #{followviewDate,jdbcType=TIMESTAMP}, 
      #{isFollowrisk,jdbcType=VARCHAR}, #{followriskDate,jdbcType=TIMESTAMP}, #{riskCode,jdbcType=VARCHAR}, 
      #{isNumber,jdbcType=VARCHAR}, #{isSpecial,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.bdcor.pip.web.data.domain.PipCommPatient">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into PIP_COMM_PATIENT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="patientId != null">
        PATIENT_ID,
      </if>
      <if test="projectId != null">
        PROJECT_ID,
      </if>
      <if test="patientName != null">
        PATIENT_NAME,
      </if>
      <if test="commPersonCode != null">
        COMM_PERSON_CODE,
      </if>
      <if test="createBy != null">
        CREATE_BY,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="updateBy != null">
        UPDATE_BY,
      </if>
      <if test="updateDate != null">
        UPDATE_DATE,
      </if>
      <if test="isRemoved != null">
        IS_REMOVED,
      </if>
      <if test="sex != null">
        SEX,
      </if>
      <if test="nation != null">
        NATION,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
      <if test="nationality != null">
        NATIONALITY,
      </if>
      <if test="idNumber != null">
        ID_NUMBER,
      </if>
      <if test="credentialsType != null">
        CREDENTIALS_TYPE,
      </if>
      <if test="credentialsCode != null">
        CREDENTIALS_CODE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="mobile != null">
        MOBILE,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="maritalStatus != null">
        MARITAL_STATUS,
      </if>
      <if test="educational != null">
        EDUCATIONAL,
      </if>
      <if test="postCode != null">
        POST_CODE,
      </if>
      <if test="nativeProvenceCode != null">
        NATIVE_PROVENCE_CODE,
      </if>
      <if test="nativeCityCode != null">
        NATIVE_CITY_CODE,
      </if>
      <if test="nativeCountyCode != null">
        NATIVE_COUNTY_CODE,
      </if>
      <if test="nativeTownCode != null">
        NATIVE_TOWN_CODE,
      </if>
      <if test="nativeVillageCode != null">
        NATIVE_VILLAGE_CODE,
      </if>
      <if test="nowProvenceCode != null">
        NOW_PROVENCE_CODE,
      </if>
      <if test="nowCityCode != null">
        NOW_CITY_CODE,
      </if>
      <if test="nowCountyCode != null">
        NOW_COUNTY_CODE,
      </if>
      <if test="nowTownCode != null">
        NOW_TOWN_CODE,
      </if>
      <if test="nowVillageCode != null">
        NOW_VILLAGE_CODE,
      </if>
      <if test="lccCode != null">
        LCC_CODE,
      </if>
      <if test="patientCode != null">
        PATIENT_CODE,
      </if>
      <if test="bloodCode != null">
        BLOOD_CODE,
      </if>
      <if test="isRisk != null">
        IS_RISK,
      </if>
      <if test="riskDate != null">
        RISK_DATE,
      </if>
      <if test="isFollowview != null">
        IS_FOLLOWVIEW,
      </if>
      <if test="followviewDate != null">
        FOLLOWVIEW_DATE,
      </if>
      <if test="isFollowrisk != null">
        IS_FOLLOWRISK,
      </if>
      <if test="followriskDate != null">
        FOLLOWRISK_DATE,
      </if>
      <if test="riskCode != null" >
        RISK_CODE,
      </if>
      <if test="linkMan1 != null" >
        LINK_MAN1,
      </if>
      <if test="linkMan1Mobile != null" >
        LINK_MAN1_MOBILE,
      </if>
      <if test="linkMan1Relation != null" >
        LINK_MAN1_RELATION,
      </if>
      <if test="isSpecial != null" >
        IS_SPECIAL,
      </if>


        <if test="isJoinMsg != null" >
            IS_JOIN_MSG,
        </if>
        <if test="isSubscribe != null" >
            IS_SUBSCRIBE,
        </if>
        <if test="isDiabetes != null" >
            IS_DIABETES,
        </if>
        <if test="lastFollowviewDate != null" >
            last_Followview_Date,
        </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="patientId != null">
        #{patientId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="patientName != null">
        #{patientName,jdbcType=VARCHAR},
      </if>
      <if test="commPersonCode != null">
        #{commPersonCode,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isRemoved != null">
        #{isRemoved,jdbcType=DECIMAL},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="nationality != null">
        #{nationality,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="credentialsType != null">
        #{credentialsType,jdbcType=VARCHAR},
      </if>
      <if test="credentialsCode != null">
        #{credentialsCode,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null">
        #{maritalStatus,jdbcType=VARCHAR},
      </if>
      <if test="educational != null">
        #{educational,jdbcType=VARCHAR},
      </if>
      <if test="postCode != null">
        #{postCode,jdbcType=VARCHAR},
      </if>
      <if test="nativeProvenceCode != null">
        #{nativeProvenceCode,jdbcType=VARCHAR},
      </if>
      <if test="nativeCityCode != null">
        #{nativeCityCode,jdbcType=VARCHAR},
      </if>
      <if test="nativeCountyCode != null">
        #{nativeCountyCode,jdbcType=VARCHAR},
      </if>
      <if test="nativeTownCode != null">
        #{nativeTownCode,jdbcType=VARCHAR},
      </if>
      <if test="nativeVillageCode != null">
        #{nativeVillageCode,jdbcType=VARCHAR},
      </if>
      <if test="nowProvenceCode != null">
        #{nowProvenceCode,jdbcType=VARCHAR},
      </if>
      <if test="nowCityCode != null">
        #{nowCityCode,jdbcType=VARCHAR},
      </if>
      <if test="nowCountyCode != null">
        #{nowCountyCode,jdbcType=VARCHAR},
      </if>
      <if test="nowTownCode != null">
        #{nowTownCode,jdbcType=VARCHAR},
      </if>
      <if test="nowVillageCode != null">
        #{nowVillageCode,jdbcType=VARCHAR},
      </if>
      <if test="lccCode != null">
        #{lccCode,jdbcType=VARCHAR},
      </if>
      <if test="patientCode != null">
        #{patientCode,jdbcType=VARCHAR},
      </if>
      <if test="bloodCode != null">
        #{bloodCode,jdbcType=VARCHAR},
      </if>
      <if test="isRisk != null">
        #{isRisk,jdbcType=VARCHAR},
      </if>
      <if test="riskDate != null">
        #{riskDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isFollowview != null">
        #{isFollowview,jdbcType=VARCHAR},
      </if>
      <if test="followviewDate != null">
        #{followviewDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isFollowrisk != null">
        #{isFollowrisk,jdbcType=VARCHAR},
      </if>
      <if test="followriskDate != null">
        #{followriskDate,jdbcType=TIMESTAMP},
      </if>
      <if test="riskCode != null" >
        #{riskCode,jdbcType=VARCHAR},
      </if>
      <if test="linkMan1 != null" >
       	#{linkMan1,jdbcType=VARCHAR},
      </if>
      <if test="linkMan1Mobile != null" >
        #{linkMan1Mobile,jdbcType=VARCHAR},
      </if>
      <if test="linkMan1Relation != null" >
        #{linkMan1Relation,jdbcType=VARCHAR},
      </if>
      <if test="isSpecial != null" >
        #{isSpecial,jdbcType=DECIMAL},
      </if>
        <if test="isJoinMsg != null" >
            #{isJoinMsg,jdbcType=VARCHAR},
        </if>
        <if test="isSubscribe != null" >
            #{isSubscribe,jdbcType=VARCHAR},
        </if>
        <if test="isDiabetes != null" >
            #{isDiabetes,jdbcType=DECIMAL},
        </if>
        <if test="lastFollowviewDate != null" >
            to_date(#{lastFollowviewDate,jdbcType=VARCHAR},'yyyy-MM-dd')
        </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bdcor.pip.web.data.domain.PipCommPatientExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from PIP_COMM_PATIENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id ="updateMsgPatient" parameterType="com.bdcor.pip.web.data.domain.PipCommPatient">
  	 update PIP_COMM_PATIENT 
  	 <set>
  	  <if test="isJoinMsg != null">
        IS_JOIN_MSG = #{isJoinMsg},
      </if>
      <if test="isSubscribe != null">
        IS_SUBSCRIBE = #{isSubscribe},
      </if>
      <if test="mobile != null and mobile !=''">
        MOBILE = #{mobile},
      </if>
      <if test="isSmoking != null">
        IS_SMOKING = #{isSmoking},
      </if>
      <if test="isXjgsbs != null and isXjgsbs!='' ">
        IS_XJGSBS = #{isXjgsbs},
      </if>
      <if test="isSystemDiabetes != null">
        IS_SYSTEM_DIABETES = #{isSystemDiabetes},
      </if>
      <if test="lastFollowviewDate != null">
        LAST_FOLLOWVIEW_DATE = to_date(#{lastFollowviewDate},'yyyy-MM-dd hh24:mi:ss'),
      </if>
  	 </set> 
  	 where PROJECT_ID = #{projectId} and PATIENT_ID  = #{patientId}
  </update>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update PIP_COMM_PATIENT
    <set>
    <if test="record.isJoinMsg != null">
        is_join_msg = #{record.isJoinMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.is6State != null">
        is_6State = #{record.is6State,jdbcType=VARCHAR},
      </if>
      <if test="record.patientId != null">
        PATIENT_ID = #{record.patientId,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        PROJECT_ID = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.patientName != null">
        PATIENT_NAME = #{record.patientName,jdbcType=VARCHAR},
      </if>
      <if test="record.commPersonCode != null">
        COMM_PERSON_CODE = #{record.commPersonCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null">
        CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null">
        UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isRemoved != null">
        IS_REMOVED = #{record.isRemoved,jdbcType=DECIMAL},
      </if>
      <if test="record.sex != null">
        SEX = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.nation != null">
        NATION = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nationality != null">
        NATIONALITY = #{record.nationality,jdbcType=VARCHAR},
      </if>
      <if test="record.idNumber != null">
        ID_NUMBER = #{record.idNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.credentialsType != null">
        CREDENTIALS_TYPE = #{record.credentialsType,jdbcType=VARCHAR},
      </if>
      <if test="record.credentialsCode != null">
        CREDENTIALS_CODE = #{record.credentialsCode,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        MOBILE = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.maritalStatus != null">
        MARITAL_STATUS = #{record.maritalStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.educational != null">
        EDUCATIONAL = #{record.educational,jdbcType=VARCHAR},
      </if>
      <if test="record.postCode != null">
        POST_CODE = #{record.postCode,jdbcType=VARCHAR},
      </if>
      <if test="record.nativeProvenceCode != null">
        NATIVE_PROVENCE_CODE = #{record.nativeProvenceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.nativeCityCode != null">
        NATIVE_CITY_CODE = #{record.nativeCityCode,jdbcType=VARCHAR},
      </if>
      <if test="record.nativeCountyCode != null">
        NATIVE_COUNTY_CODE = #{record.nativeCountyCode,jdbcType=VARCHAR},
      </if>
      <if test="record.nativeTownCode != null">
        NATIVE_TOWN_CODE = #{record.nativeTownCode,jdbcType=VARCHAR},
      </if>
      <if test="record.nativeVillageCode != null">
        NATIVE_VILLAGE_CODE = #{record.nativeVillageCode,jdbcType=VARCHAR},
      </if>
      <if test="record.nowProvenceCode != null">
        NOW_PROVENCE_CODE = #{record.nowProvenceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.nowCityCode != null">
        NOW_CITY_CODE = #{record.nowCityCode,jdbcType=VARCHAR},
      </if>
      <if test="record.nowCountyCode != null">
        NOW_COUNTY_CODE = #{record.nowCountyCode,jdbcType=VARCHAR},
      </if>
      <if test="record.nowTownCode != null">
        NOW_TOWN_CODE = #{record.nowTownCode,jdbcType=VARCHAR},
      </if>
      <if test="record.nowVillageCode != null">
        NOW_VILLAGE_CODE = #{record.nowVillageCode,jdbcType=VARCHAR},
      </if>
      <if test="record.lccCode != null">
        LCC_CODE = #{record.lccCode,jdbcType=VARCHAR},
      </if>
      <if test="record.patientCode != null">
        PATIENT_CODE = #{record.patientCode,jdbcType=VARCHAR},
      </if>
      <if test="record.bloodCode != null">
        BLOOD_CODE = #{record.bloodCode,jdbcType=VARCHAR},
      </if>
      <if test="record.isRisk != null">
        IS_RISK = #{record.isRisk,jdbcType=VARCHAR},
      </if>
      <if test="record.riskDate != null">
        RISK_DATE = #{record.riskDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isFollowview != null">
        IS_FOLLOWVIEW = #{record.isFollowview,jdbcType=VARCHAR},
      </if>
      <if test="record.followviewDate != null">
        FOLLOWVIEW_DATE = #{record.followviewDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isFollowrisk != null">
        IS_FOLLOWRISK = #{record.isFollowrisk,jdbcType=VARCHAR},
      </if>
      <if test="record.followriskDate != null">
        FOLLOWRISK_DATE = #{record.followriskDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.riskCode != null" >
        RISK_CODE = #{record.riskCode,jdbcType=VARCHAR},
      </if>
      <if test="record.isSpecial != null" >
        IS_SPECIAL = #{record.isSpecial,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update PIP_COMM_PATIENT
    set PATIENT_ID = #{record.patientId,jdbcType=VARCHAR},
      PROJECT_ID = #{record.projectId,jdbcType=VARCHAR},
      PATIENT_NAME = #{record.patientName,jdbcType=VARCHAR},
      COMM_PERSON_CODE = #{record.commPersonCode,jdbcType=VARCHAR},
      CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      IS_REMOVED = #{record.isRemoved,jdbcType=DECIMAL},
      SEX = #{record.sex,jdbcType=VARCHAR},
      NATION = #{record.nation,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=TIMESTAMP},
      NATIONALITY = #{record.nationality,jdbcType=VARCHAR},
      ID_NUMBER = #{record.idNumber,jdbcType=VARCHAR},
      CREDENTIALS_TYPE = #{record.credentialsType,jdbcType=VARCHAR},
      CREDENTIALS_CODE = #{record.credentialsCode,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      MOBILE = #{record.mobile,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      MARITAL_STATUS = #{record.maritalStatus,jdbcType=VARCHAR},
      EDUCATIONAL = #{record.educational,jdbcType=VARCHAR},
      POST_CODE = #{record.postCode,jdbcType=VARCHAR},
      NATIVE_PROVENCE_CODE = #{record.nativeProvenceCode,jdbcType=VARCHAR},
      NATIVE_CITY_CODE = #{record.nativeCityCode,jdbcType=VARCHAR},
      NATIVE_COUNTY_CODE = #{record.nativeCountyCode,jdbcType=VARCHAR},
      NATIVE_TOWN_CODE = #{record.nativeTownCode,jdbcType=VARCHAR},
      NATIVE_VILLAGE_CODE = #{record.nativeVillageCode,jdbcType=VARCHAR},
      NOW_PROVENCE_CODE = #{record.nowProvenceCode,jdbcType=VARCHAR},
      NOW_CITY_CODE = #{record.nowCityCode,jdbcType=VARCHAR},
      NOW_COUNTY_CODE = #{record.nowCountyCode,jdbcType=VARCHAR},
      NOW_TOWN_CODE = #{record.nowTownCode,jdbcType=VARCHAR},
      NOW_VILLAGE_CODE = #{record.nowVillageCode,jdbcType=VARCHAR},
      LCC_CODE = #{record.lccCode,jdbcType=VARCHAR},
      PATIENT_CODE = #{record.patientCode,jdbcType=VARCHAR},
      BLOOD_CODE = #{record.bloodCode,jdbcType=VARCHAR},
      IS_RISK = #{record.isRisk,jdbcType=VARCHAR},
      RISK_DATE = #{record.riskDate,jdbcType=TIMESTAMP},
      IS_FOLLOWVIEW = #{record.isFollowview,jdbcType=VARCHAR},
      FOLLOWVIEW_DATE = #{record.followviewDate,jdbcType=TIMESTAMP},
      IS_FOLLOWRISK = #{record.isFollowrisk,jdbcType=VARCHAR},
      FOLLOWRISK_DATE = #{record.followriskDate,jdbcType=TIMESTAMP},
      RISK_CODE = #{record.riskCode,jdbcType=VARCHAR},
      IS_SPECIAL = #{record.isSpecial,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByPatientId" parameterType="com.bdcor.pip.web.data.domain.PipCommPatient">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update PIP_COMM_PATIENT
    <set>
      <if test="patientName != null">
        PATIENT_NAME = #{patientName,jdbcType=VARCHAR},
      </if>
      <if test="commPersonCode != null">
        COMM_PERSON_CODE = #{commPersonCode,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isRemoved != null">
        IS_REMOVED = #{isRemoved,jdbcType=DECIMAL},
      </if>
      <if test="sex != null">
        SEX = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        NATION = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        BIRTHDAY = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="nationality != null">
        NATIONALITY = #{nationality,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        ID_NUMBER = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="credentialsType != null">
        CREDENTIALS_TYPE = #{credentialsType,jdbcType=VARCHAR},
      </if>
      <if test="credentialsCode != null">
        CREDENTIALS_CODE = #{credentialsCode,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        MOBILE = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null">
        MARITAL_STATUS = #{maritalStatus,jdbcType=VARCHAR},
      </if>
      <if test="educational != null">
        EDUCATIONAL = #{educational,jdbcType=VARCHAR},
      </if>
      <if test="postCode != null">
        POST_CODE = #{postCode,jdbcType=VARCHAR},
      </if>
      <if test="nativeProvenceCode != null">
        NATIVE_PROVENCE_CODE = #{nativeProvenceCode,jdbcType=VARCHAR},
      </if>
      <if test="nativeCityCode != null">
        NATIVE_CITY_CODE = #{nativeCityCode,jdbcType=VARCHAR},
      </if>
      <if test="nativeCountyCode != null">
        NATIVE_COUNTY_CODE = #{nativeCountyCode,jdbcType=VARCHAR},
      </if>
      <if test="nativeTownCode != null">
        NATIVE_TOWN_CODE = #{nativeTownCode,jdbcType=VARCHAR},
      </if>
      <if test="nativeVillageCode != null">
        NATIVE_VILLAGE_CODE = #{nativeVillageCode,jdbcType=VARCHAR},
      </if>
      <if test="nowProvenceCode != null">
        NOW_PROVENCE_CODE = #{nowProvenceCode,jdbcType=VARCHAR},
      </if>
      <if test="nowCityCode != null">
        NOW_CITY_CODE = #{nowCityCode,jdbcType=VARCHAR},
      </if>
      <if test="nowCountyCode != null">
        NOW_COUNTY_CODE = #{nowCountyCode,jdbcType=VARCHAR},
      </if>
      <if test="nowTownCode != null">
        NOW_TOWN_CODE = #{nowTownCode,jdbcType=VARCHAR},
      </if>
      <if test="nowVillageCode != null">
        NOW_VILLAGE_CODE = #{nowVillageCode,jdbcType=VARCHAR},
      </if>
      <if test="lccCode != null">
        LCC_CODE = #{lccCode,jdbcType=VARCHAR},
      </if>
      <if test="patientCode != null">
        PATIENT_CODE = #{patientCode,jdbcType=VARCHAR},
      </if>
      <if test="bloodCode != null">
        BLOOD_CODE = #{bloodCode,jdbcType=VARCHAR},
      </if>
      <if test="isRisk != null">
        IS_RISK = #{isRisk,jdbcType=VARCHAR},
      </if>
      <if test="riskDate != null">
        RISK_DATE = #{riskDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isFollowview != null">
        IS_FOLLOWVIEW = #{isFollowview,jdbcType=VARCHAR},
      </if>
      <if test="followviewDate != null">
        FOLLOWVIEW_DATE = #{followviewDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isFollowrisk != null">
        IS_FOLLOWRISK = #{isFollowrisk,jdbcType=VARCHAR},
      </if>
      <if test="followriskDate != null">
        FOLLOWRISK_DATE = #{followriskDate,jdbcType=TIMESTAMP},
      </if>
      <if test="riskCode != null" >
        RISK_CODE = #{riskCode,jdbcType=VARCHAR},
      </if>
      <if test="isSpecial != null" >
        IS_SPECIAL = #{isSpecial,jdbcType=DECIMAL},
      </if>
        <if test="linkMan1 != null" >
            link_Man1 = #{linkMan1,jdbcType=VARCHAR},
        </if>
        <if test="linkMan1Mobile != null" >
            link_Man1_Mobile = #{linkMan1Mobile,jdbcType=VARCHAR},
        </if>
        <if test="linkMan1Relation != null" >
            link_Man1_Relation = #{linkMan1Relation,jdbcType=VARCHAR},
        </if>
    </set>
    where PATIENT_ID = #{patientId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bdcor.pip.web.data.domain.PipCommPatient">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update PIP_COMM_PATIENT
    <set>
      <if test="patientName != null">
        PATIENT_NAME = #{patientName,jdbcType=VARCHAR},
      </if>
      <if test="commPersonCode != null">
        COMM_PERSON_CODE = #{commPersonCode,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isRemoved != null">
        IS_REMOVED = #{isRemoved,jdbcType=DECIMAL},
      </if>
      <if test="sex != null">
        SEX = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        NATION = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        BIRTHDAY = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="nationality != null">
        NATIONALITY = #{nationality,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        ID_NUMBER = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="credentialsType != null">
        CREDENTIALS_TYPE = #{credentialsType,jdbcType=VARCHAR},
      </if>
      <if test="credentialsCode != null">
        CREDENTIALS_CODE = #{credentialsCode,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        MOBILE = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null">
        MARITAL_STATUS = #{maritalStatus,jdbcType=VARCHAR},
      </if>
      <if test="educational != null">
        EDUCATIONAL = #{educational,jdbcType=VARCHAR},
      </if>
      <if test="postCode != null">
        POST_CODE = #{postCode,jdbcType=VARCHAR},
      </if>
      <if test="nativeProvenceCode != null">
        NATIVE_PROVENCE_CODE = #{nativeProvenceCode,jdbcType=VARCHAR},
      </if>
      <if test="nativeCityCode != null">
        NATIVE_CITY_CODE = #{nativeCityCode,jdbcType=VARCHAR},
      </if>
      <if test="nativeCountyCode != null">
        NATIVE_COUNTY_CODE = #{nativeCountyCode,jdbcType=VARCHAR},
      </if>
      <if test="nativeTownCode != null">
        NATIVE_TOWN_CODE = #{nativeTownCode,jdbcType=VARCHAR},
      </if>
      <if test="nativeVillageCode != null">
        NATIVE_VILLAGE_CODE = #{nativeVillageCode,jdbcType=VARCHAR},
      </if>
      <if test="nowProvenceCode != null">
        NOW_PROVENCE_CODE = #{nowProvenceCode,jdbcType=VARCHAR},
      </if>
      <if test="nowCityCode != null">
        NOW_CITY_CODE = #{nowCityCode,jdbcType=VARCHAR},
      </if>
      <if test="nowCountyCode != null">
        NOW_COUNTY_CODE = #{nowCountyCode,jdbcType=VARCHAR},
      </if>
      <if test="nowTownCode != null">
        NOW_TOWN_CODE = #{nowTownCode,jdbcType=VARCHAR},
      </if>
      <if test="nowVillageCode != null">
        NOW_VILLAGE_CODE = #{nowVillageCode,jdbcType=VARCHAR},
      </if>
      <if test="lccCode != null">
        LCC_CODE = #{lccCode,jdbcType=VARCHAR},
      </if>
      <if test="patientCode != null">
        PATIENT_CODE = #{patientCode,jdbcType=VARCHAR},
      </if>
      <if test="bloodCode != null">
        BLOOD_CODE = #{bloodCode,jdbcType=VARCHAR},
      </if>
      <if test="isRisk != null">
        IS_RISK = #{isRisk,jdbcType=VARCHAR},
      </if>
      <if test="riskDate != null">
        RISK_DATE = #{riskDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isFollowview != null">
        IS_FOLLOWVIEW = #{isFollowview,jdbcType=VARCHAR},
      </if>
      <if test="followviewDate != null">
        FOLLOWVIEW_DATE = #{followviewDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isFollowrisk != null">
        IS_FOLLOWRISK = #{isFollowrisk,jdbcType=VARCHAR},
      </if>
      <if test="followriskDate != null">
        FOLLOWRISK_DATE = #{followriskDate,jdbcType=TIMESTAMP},
      </if>
      <if test="riskCode != null" >
        RISK_CODE = #{riskCode,jdbcType=VARCHAR},
      </if>
      <if test="isSpecial != null" >
        IS_SPECIAL = #{isSpecial,jdbcType=DECIMAL},
      </if>
      <if test="is6State != null" >
        is_6State = #{is6State,jdbcType=DECIMAL},
      </if>
    </set>
    where PATIENT_ID = #{patientId,jdbcType=VARCHAR}
      and PROJECT_ID = #{projectId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPatientList" parameterType="com.bdcor.pip.web.data.domain.PipCommPatient">
    update PIP_COMM_PATIENT
    <set>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        MOBILE = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
        PATIENT_NAME = #{patientName,jdbcType=VARCHAR}
    </set>
    where PATIENT_ID = #{patientId,jdbcType=VARCHAR}
      and PROJECT_ID = #{projectId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bdcor.pip.web.data.domain.PipCommPatient">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update PIP_COMM_PATIENT
    set 
      PATIENT_NAME = #{patientName,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      MOBILE = #{mobile,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      LCC_CODE = #{lccCode,jdbcType=VARCHAR},
      ID_NUMBER = #{idNumber,jdbcType=VARCHAR},
      PATIENT_CODE = #{patientCode,jdbcType=VARCHAR},
      LINK_MAN1 = #{linkMan1,jdbcType=VARCHAR},
      LINK_MAN1_MOBILE = #{linkMan1Mobile,jdbcType=VARCHAR},
      LINK_MAN1_RELATION = #{linkMan1Relation,jdbcType=VARCHAR},
    IS_6STATE = #{is6State,jdbcType=VARCHAR}
    where PATIENT_ID = #{patientId,jdbcType=VARCHAR}
      and PROJECT_ID = #{projectId,jdbcType=VARCHAR}
  </update>
  
  <select id="getAreaRiskNum" parameterType="String" resultType="map">
  		select l.project_id , d.vcode , d.vname as name , count(1) as value
  		from pip_comm_patient p , pip_comm_lcc l , pip_comm_dict_district d
		where p.project_id = l.project_id and p.lcc_code = l.lcc_code 
    	and p.risk_code is not null
    	and d.vcode = l.area_code
    	and p.project_id = #{projectId,jdbcType=VARCHAR} 
		group by l.project_id, d.vcode, d.vname 
  </select>
  
  <select id="getAreaRiskOrderNum" parameterType="String" resultType="map">
  		select l.project_id , d.vcode , d.vname as name , count(1) as value
  		from pip_comm_patient p , pip_comm_lcc l , pip_comm_dict_district d
		where p.project_id = l.project_id and p.lcc_code = l.lcc_code 
    	and p.IS_FOLLOWRISK = '1'
    	and d.vcode = l.area_code
    	and p.project_id = #{projectId,jdbcType=VARCHAR} 
		group by l.project_id, d.vcode, d.vname 
  </select>
  
  <select id="getAreaFollowViewNum" parameterType="String" resultType="map">
  		select l.project_id , d.vcode , d.vname as name , count(1) as value
  		from pip_comm_patient p , pip_comm_lcc l , pip_comm_dict_district d
		where p.project_id = l.project_id and p.lcc_code = l.lcc_code 
    	and p.IS_FOLLOWVIEW = '1'
    	and d.vcode = l.area_code
    	and p.project_id = #{projectId,jdbcType=VARCHAR} 
		group by l.project_id, d.vcode, d.vname 
  </select>
  
  <select id="getLccRiskNum" parameterType="String" resultType="map">
  		select l.project_id , l.lcc_code , l.lcc_name as name , l.workload, count(1) as value
  		from pip_comm_patient p , pip_comm_lcc l
		where  p.risk_code is not null and p.project_id = l.project_id and p.lcc_code = l.lcc_code and p.project_id = #{projectId,jdbcType=VARCHAR} 
		group by l.project_id, l.lcc_code, l.lcc_name , l.workload
  </select>
  
  <select id="getLccViewNum" parameterType="String" resultType="map">
  		select l.project_id , l.lcc_code , l.lcc_name as name , l.workload, count(1) as value
  		from pip_comm_patient p , pip_comm_lcc l
		where p.IS_FOLLOWVIEW = '1' and p.project_id = l.project_id and p.lcc_code = l.lcc_code and p.project_id = #{projectId,jdbcType=VARCHAR} 
		group by l.project_id, l.lcc_code, l.lcc_name , l.workload
  </select>
  
  <select id="getLccRiskNumByTime" parameterType="com.bdcor.pip.web.data.filter.PatientFilter" resultType="map">
  		select l.project_id , l.lcc_code , l.lcc_name as name , l.workload, count(1) as value
  		from pip_comm_patient p , pip_comm_lcc l
		where  p.risk_code is not null and p.project_id = l.project_id and p.lcc_code = l.lcc_code 
		and p.project_id = #{projectId} and p.lcc_code = #{lccCode} 
		<if test="start != null ">   
			<![CDATA[ and p.risk_date >= #{start} ]]>
		</if>
		<if test="end != null ">   
			<![CDATA[ and p.risk_date <= #{end} ]]>
		</if>
		group by l.project_id, l.lcc_code, l.lcc_name , l.workload
  </select>
  
  <select id="getLccViewNumByTime" parameterType="com.bdcor.pip.web.data.filter.PatientFilter" resultType="map">
  		select l.project_id , l.lcc_code , l.lcc_name as name , l.workload, count(1) as value
  		from pip_comm_patient p , pip_comm_lcc l
		where p.IS_FOLLOWVIEW = '1' and p.project_id = l.project_id and p.lcc_code = l.lcc_code 
		and p.project_id = #{projectId} and p.lcc_code = #{lccCode} 
		<if test="start != null ">   
			<![CDATA[ and p.FOLLOWVIEW_DATE >= #{start} ]]>
		</if>
		<if test="end != null ">   
			<![CDATA[ and p.FOLLOWVIEW_DATE <= #{end} ]]>
		</if>
		group by l.project_id, l.lcc_code, l.lcc_name , l.workload
  </select>
  <select id="selectPatientNeedSendMsg"  resultMap="BaseResultMap">
  	select
		p.*,lcc.lcc_name lccName
	from pip_comm_patient p
	left join pip_fee_info pf on p.patient_id=pf.patient_id
	left join pip_comm_lcc lcc on p.lcc_code=lcc.lcc_code
	left join pip_comm_dict_district dis on dis.vcode = lcc.area_code
  	where p.BELONG_GROUP in ('01','02','11','12')
          and p.IS_SUBSCRIBE =1
          and p.is_join_msg =1
          and p.is_smoking in ('1','2')
          and p.mobile is not null
  </select>
  <select id="getLccPatientList" parameterType="com.bdcor.pip.web.data.filter.PatientFilter" resultMap="BaseResultMap">
  	select
		p.*,lcc.lcc_name lccName
	from pip_comm_patient p
	left join pip_fee_info pf on p.patient_id=pf.patient_id
	left join pip_comm_lcc lcc on p.lcc_code=lcc.lcc_code
	left join pip_comm_dict_district dis on dis.vcode = lcc.area_code
	where 1=1
		<if test="lccName != null ">   
			and dis.vname like '%${lccName}%'
		</if>
		<if test='type == "2" '>   <!-- 初筛 -->
			and pf.st_type=2
		</if>
		<if test='type == "3" '>   <!-- 高危 -->
			and p.risk_code is not null and pf.st_type=1
		</if>
		<if test='type == "4" '>   <!-- 预约随访 -->
			and p.is_followview=1 and pf.st_type=1
		</if>
  </select> 
  
  <select id="getProgressByCondit" parameterType="com.bdcor.pip.web.progress.filter.ProgressFilter" resultType="map">
    <!--  考虑了 同一个患者  同一个阶段 必须完成多项 问卷的情况 ，但未考虑 同一个患者 同一个阶段 多项问卷只需完成一个的情况  -->
    <if test="types != null and types !=''">
         <foreach collection="types"  index="index"  item="item"  open="with sq as (select CD,SUM(Total_Sum) Total_Sum from ( Select greatest(" close=") cd," separator="," >
             <if test="item != '' and index == 0 ">   
                 To_Char(A.Create_Date,'yyyy-MM-dd')
             </if>
             <if test="item != '' and index != 0 ">   
                To_Char(A${index}.Create_Date,'yyyy-MM-dd')
             </if>
          </foreach> 
          
          <foreach collection="types"  index="index"  item="item"  >
            <if test="item != '' and index == 0 ">   
               Count(1) Total_Sum  From Pip_Comm_Patient_Qc A 
            </if>
            <if test="item != '' and index != 0 ">   
                inner Join Pip_Comm_Patient_Qc A${index}  On  A.Patient_Id=A${index}.Patient_Id and A.Lcc_Code=A${index}.Lcc_Code and A.Project_Id=A${index}.Project_Id 
            </if>
          </foreach>
          <foreach collection="types"  index="index"  item="item"  open=" where " >
            <if test="item != '' and index == 0 ">   
                  A.ITEM_CODE= #{item}
            </if>
            <if test="item != '' and index != 0 ">   
                and A${index}.ITEM_CODE=#{item}
            </if>
          </foreach>
            <if test="projectId != null and projectId !=''">   
               and A.Project_Id=#{projectId}
            </if>
            <if test="lccCode != null and lccCode !=''">   
                   and A.Lcc_Code=#{lccCode} 
            </if>
           <!--  
            <if test="start != null ">   
                    <![CDATA[ and A.CREATE_DATE >= #{start} ]]>
            </if> -->
            
            <if test="end != null ">   
                    <![CDATA[ and A.CREATE_DATE <= #{end} ]]>
            </if> 
            
            <if test="area_code != null and area_code !=''">   
                   and  A.Lcc_Code in (select Lcc_Code From Pip_Comm_Lcc Lc  Where  Lc.Area_Code=#{area_code}) 
            </if> 
           
          <foreach collection="types"  index="index"  item="item"  open=" Group By  greatest( " close=") " separator="," >
             <if test="item != '' and index == 0 ">   
                To_Char(A.Create_Date,'yyyy-MM-dd')
             </if>
             <if test="item != '' and index != 0 "  >   
                To_Char(A${index}.Create_Date,'yyyy-MM-dd')
             </if>
          </foreach>
          <foreach collection="days_"  index="index"  item="item"  close=") QQ group by CD    Order By Cd  ) " >
            <if test="item != '' ">   
                Union Select #{item} As Cd,0 As Total_Sum From Dual
            </if>
          </foreach> 
          
          
    </if>
    
    
    select 
    
    <foreach collection="days_"  index="index"  item="item"  separator=",">
      <if test="item != '' ">   
         Sum(Decode(cd,#{item},Total_Sum)) As X${index}
      </if>
    </foreach> 
     
    from (
    select a.cd cd, max(a.total_sum) as mtotal_sum , sum (b.total_sum) as total_sum 
    from  sq a  join sq  b  on 1=1 
    where   
    <![CDATA[b.cd <= a.cd   ]]>
    group by a.cd   order by a.cd
    )
</select>

<update id="updatePatientInfo" parameterType="map">
	update PIP_COMM_PATIENT_INFO set PROJECT_ID = #{projectId}
	<if test="medicalHis_MI != null">   
    	,MEDICALHIS_MI = #{medicalHis_MI}
    </if>
    <if test="medicalInsurance != null ">   
    	,MEDICAL_INSURANCE = #{medicalInsurance}
    </if>
    where PROJECT_ID = #{projectId} and PATIENT_ID=#{patientId}
</update>

<update id="updatePatientDate" parameterType="map">
	update PIP_COMM_PATIENT_DATE set PROJECT_ID = #{projectId}
	<if test="sixRealDate != null">
		,SIX_REAL_DATE = #{sixRealDate}
	</if>
	<if test="twelvePlanDate != null">
		,TWELVE_PLAN_DATE = #{twelvePlanDate}
	</if>
	
    where PROJECT_ID = #{projectId} and PATIENT_ID=#{patientId}
</update>

<select id="getPatientGroupVo" parameterType="String" resultType="com.bdcor.pip.web.msg.domain.PatientGroupVo">
	select 
	info.PATIENT_ID as patientId,
	info.MEDICALHIS_MI as medicalHis_MI,
	info.MEDICAL_INSURANCE as medicalInsurance,
	info.SEX as sex,
	info.AGE_GRADE as age_grade,
	info.EDU_LEVEL as edu_level,
  (case when p.IS_DIABETES=1 then 1 else 2 end)is_diabetes
	from PIP_COMM_PATIENT_INFO info 
  left join PIP_COMM_PATIENT p on p.PROJECT_ID=info.PROJECT_ID and p.PATIENT_ID=info.PATIENT_ID
	where info.PATIENT_ID=#{patientId}
</select>

    <select id="getPatientForAuto" resultType="map">
        select p.*,lcc.lcc_name,
        <!-- info.PATIENT_ID as patientId, -->
        info.MEDICALHIS_MI as medicalHis_MI,
        info.MEDICAL_INSURANCE as medicalInsurance,
        info.SEX as sex,
        info.AGE_GRADE as age_grade,
        info.EDU_LEVEL as edu_level,
        (case when p.IS_DIABETES=1 then 1 else 2 end)is_diabetes
        from PIP_COMM_PATIENT p
        left join pip_comm_lcc lcc on p.lcc_code = lcc.lcc_code
        left join PIP_COMM_PATIENT_INFO info on p.PROJECT_ID=info.PROJECT_ID and p.PATIENT_ID=info.PATIENT_ID
        where p.PATIENT_ID like '%'||#{q}||'%'
        and p.process_types = '1'
        and ( p.is_join_msg != '1' or p.is_join_msg is null )
        and ( p.is_dead ='' or p.is_dead is null )
        and ( p.belong_group ='' or p.belong_group is null )
        and ( p.is_removed = '0')
        and length(p.patient_id) = 8
        <if test="limit != null and limit != ''">
            and rownum &lt;= #{limit}
        </if>
</select>

    <update id="updateProcessType">
        update pip_comm_patient set process_types=#{value} where patient_id=#{patientId}
    </update>

    <select id="getInfoByid" resultType="map" parameterType="string">
        select * from pip_comm_patient where patient_id=#{patientId}
    </select>

    <update id="updateSendTypeByUQS14">
        update pip_comm_patient set send_type = 2
        where patient_id in (
            <!--未做完末次问卷且超过210天-->
            select p.patient_id
            from pip_comm_patient p left join pip_uqs_answerqn_log al
            on p.project_id = al.project_id and p.patient_id = al.patient_id and substr(al.uqs_version, 5, 3) = '014' and al.state = 1
            where group_date is not null
            and al.patient_id is null
            and (sysdate - group_date) > 210
            and send_type != 2

            union all
            <!--完成末次问卷-->
            select p.patient_id
            from pip_comm_patient p left join pip_uqs_answerqn_log al
            on p.project_id = al.project_id and p.patient_id = al.patient_id and substr(al.uqs_version, 5, 3) = '014' and al.state = 1
            where al.state = 1
        )
    </update>

    <update id="updateSendTypeByUQS11">
        update pip_comm_patient set send_type = 2
        where patient_id in (
            select p.patient_id
            from pip_comm_patient p left join pip_uqs_answerqn_log al
            on p.project_id = al.project_id and p.patient_id = al.patient_id and substr(al.uqs_version, 5, 3) = '011' and al.state = 1
            where al.patient_id is not null
            and (sysdate - al.create_date) > 210
            and p.send_type != 2
        )
    </update>
</mapper>