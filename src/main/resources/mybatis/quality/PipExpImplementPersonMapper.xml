<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bdcor.pip.web.quality.dao.PipExpImplementPersonMapper" >
  <resultMap id="BaseResultMap" type="com.bdcor.pip.web.quality.domain.PipExpImplementPerson" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="PERSON_TYPE" property="personType" jdbcType="VARCHAR" />
    <result column="LCC_USER_ID" property="lccUserId" jdbcType="VARCHAR" />
    <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="IMPLEMENT_ID" property="implementId" jdbcType="VARCHAR" />
    <result column="PROJECT_ID" property="projectId" jdbcType="VARCHAR" />
    <result column="LCC_CODE" property="lccCode" jdbcType="VARCHAR" />
    <result column="LCC_USER_NAME" property="lccUserName" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, PERSON_TYPE, LCC_USER_ID, CREATE_BY, CREATE_DATE, UPDATE_BY, UPDATE_DATE, IMPLEMENT_ID, 
    PROJECT_ID, LCC_CODE
  </sql>
  <select id="selectByFilter" resultMap="BaseResultMap" parameterType="com.bdcor.pip.web.quality.filter.PipExpImplementPersonFilter">
  	select p.*,u.name as lcc_user_name
  	from PIP_EXP_IMPLEMENT_PERSON p
  	left join pip_comm_lcc_user u 
  		on p.project_id =u.project_id and p.lcc_code= u.lcc_code and u.user_code = p.LCC_USER_ID
  	where 
  		<if test="implementId !=null and implementId !=''">
  			p.IMPLEMENT_ID=#{implementId}
  		</if>
  		order by p.id desc
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bdcor.pip.web.quality.domain.PipExpImplementPersonExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PIP_EXP_IMPLEMENT_PERSON
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from PIP_EXP_IMPLEMENT_PERSON
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from PIP_EXP_IMPLEMENT_PERSON
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteBatch" parameterType="java.lang.String">
  	delete from PIP_EXP_IMPLEMENT_PERSON
    where id in (${ids})
  </delete>
  <delete id="deleteByExample" parameterType="com.bdcor.pip.web.quality.domain.PipExpImplementPersonExample" >
    delete from PIP_EXP_IMPLEMENT_PERSON
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bdcor.pip.web.quality.domain.PipExpImplementPerson" >
    <selectKey keyProperty="id" resultType="string" order="BEFORE">
     select PIP_EXP_IMP_PERSON_SEQ.nextval from dual
    </selectKey>
    insert into PIP_EXP_IMPLEMENT_PERSON (ID, PERSON_TYPE, LCC_USER_ID, 
      CREATE_BY, CREATE_DATE, UPDATE_BY, 
      UPDATE_DATE, IMPLEMENT_ID, PROJECT_ID, 
      LCC_CODE)
    values (#{id,jdbcType=VARCHAR}, #{personType,jdbcType=VARCHAR}, #{lccUserId,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{implementId,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, 
      #{lccCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bdcor.pip.web.quality.domain.PipExpImplementPerson" >
    <selectKey keyProperty="id" resultType="string" order="BEFORE">
     select PIP_EXP_IMP_PERSON_SEQ.nextval from dual
    </selectKey>
    insert into PIP_EXP_IMPLEMENT_PERSON
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="personType != null" >
        PERSON_TYPE,
      </if>
      <if test="lccUserId != null" >
        LCC_USER_ID,
      </if>
      <if test="createBy != null" >
        CREATE_BY,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="updateBy != null" >
        UPDATE_BY,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
      <if test="implementId != null" >
        IMPLEMENT_ID,
      </if>
      <if test="projectId != null" >
        PROJECT_ID,
      </if>
      <if test="lccCode != null" >
        LCC_CODE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="personType != null" >
        #{personType,jdbcType=VARCHAR},
      </if>
      <if test="lccUserId != null" >
        #{lccUserId,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="implementId != null" >
        #{implementId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="lccCode != null" >
        #{lccCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bdcor.pip.web.quality.domain.PipExpImplementPersonExample" resultType="java.lang.Integer" >
    select count(*) from PIP_EXP_IMPLEMENT_PERSON
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PIP_EXP_IMPLEMENT_PERSON
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.personType != null" >
        PERSON_TYPE = #{record.personType,jdbcType=VARCHAR},
      </if>
      <if test="record.lccUserId != null" >
        LCC_USER_ID = #{record.lccUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null" >
        CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.implementId != null" >
        IMPLEMENT_ID = #{record.implementId,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null" >
        PROJECT_ID = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.lccCode != null" >
        LCC_CODE = #{record.lccCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PIP_EXP_IMPLEMENT_PERSON
    set ID = #{record.id,jdbcType=VARCHAR},
      PERSON_TYPE = #{record.personType,jdbcType=VARCHAR},
      LCC_USER_ID = #{record.lccUserId,jdbcType=VARCHAR},
      CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      IMPLEMENT_ID = #{record.implementId,jdbcType=VARCHAR},
      PROJECT_ID = #{record.projectId,jdbcType=VARCHAR},
      LCC_CODE = #{record.lccCode,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bdcor.pip.web.quality.domain.PipExpImplementPerson" >
    update PIP_EXP_IMPLEMENT_PERSON
    <set >
      <if test="personType != null" >
        PERSON_TYPE = #{personType,jdbcType=VARCHAR},
      </if>
      <if test="lccUserId != null" >
        LCC_USER_ID = #{lccUserId,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="implementId != null" >
        IMPLEMENT_ID = #{implementId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        PROJECT_ID = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="lccCode != null" >
        LCC_CODE = #{lccCode,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bdcor.pip.web.quality.domain.PipExpImplementPerson" >
    update PIP_EXP_IMPLEMENT_PERSON
    set PERSON_TYPE = #{personType,jdbcType=VARCHAR},
      LCC_USER_ID = #{lccUserId,jdbcType=VARCHAR},
      CREATE_BY = #{createBy,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      IMPLEMENT_ID = #{implementId,jdbcType=VARCHAR},
      PROJECT_ID = #{projectId,jdbcType=VARCHAR},
      LCC_CODE = #{lccCode,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>